version: '3'

services:

  spring-app:
    image: sicredi-votes-v1:1.0.0
    ports:
      - "8080:8080"
    environment:
      - "SICREDI_VOTES_SERVER_PORT=8080"
      - "SICREDI_VOTES_DATABASE_URL=mongodb://mongo-db:27017/sicred-votes"
      - "SICREDI_VOTES_KAFKA_HOST=http://kafka:29092"
      - "SICREDI_VOTES_KAFKA_TOPIC_NAME=sicredi-votes-kafka-topic"
      - "SICREDI_VOTES_KAFKA_TOPIC_GROUP_ID=sicredi-votes-kafka-group-id"
      - "SECONDS-TO-VOTING-FINISH-DEFAULT=60"
    depends_on:
      - mongo-db
      - kafka
    networks:
      - backend

  mongo-db:
    image: mongodb/mongodb-community-server:6.0-ubi8
    ports:
      - "27017:27017"
    volumes:
      - sicredi-votes-db-volume:/data/db
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:5.1.2
    restart: always
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: "2181"
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.1.2
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: "r1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_JMX_PORT: 9991
    networks:
      - backend

networks:
  backend:

volumes:
  sicredi-votes-db-volume:
